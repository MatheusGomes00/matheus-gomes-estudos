version: '3.9'

services:
  dbmysql:
    image: mysql:latest
    environment:
      MYSQL_USER: docker
      MYSQL_PASSWORD: admin123
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ms_users
    ports:
      - "3306:3306"
    networks:
      - mynetwork

  msuser:
    image: msuser:0.0.1-snapshot
    build:
      context: ./msUser
      dockerfile: Dockerfile
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://dbmysql:3306/ms_users?useTimezone=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: docker
      SPRING_DATASOURCE_PASSWORD: admin123
      JWT_PRIVATE_KEY: classpath:app.key
      JWT_PUBLIC_KEY: classpath:app.pub
    ports:
      - "8081:8081"
    command: mvn spring-boot:run
    depends_on:
      - dbmysql
    networks:
      - mynetwork
  
  zookeeper:
    image: zookeeper:3.7
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - mynetwork

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: broker
    environment:
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "my_topic"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - mynetwork

  kafkaconsumer:
    image: kafkaconsumer:0.0.1-snapshot
    restart: always
    build: 
      context: ./kafkaconsumer
      dockerfile: Dockerfile
    environment:
      SPRING_KAFKA_TOPICS: my_topic
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
    command: mvn spring-boot:run
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: 
      bridge